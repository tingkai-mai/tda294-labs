# 1 "part1_1.pml"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 384 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "part1_1.pml" 2

bool isForkUsed[4];

proctype phil(int id) {
  printf("running\n");
  int firstForkIndex = id;
  int secondForkIndex = (id+1) % 4;
  do
    :: printf("Philosopher %d is thinking\n", id);
      atomic {
        !isForkUsed[firstForkIndex] && !isForkUsed[secondForkIndex];
        isForkUsed[firstForkIndex] = true;
        isForkUsed[secondForkIndex] = true;
        printf("Philosopher %d is eating with forks %d and %d\n", id, firstForkIndex, secondForkIndex);
        isForkUsed[firstForkIndex] = false;
        isForkUsed[secondForkIndex] = false;
      }
 od
}

init {
  int i = 0;
  int j = 0;

  for (j : 0 .. 4 -1) {
    isForkUsed[j] = false;
  }

  do
  :: i >= 4 -> break
  :: else ->
      run phil(i);
     i++
  od
  printf("End\n");
}
